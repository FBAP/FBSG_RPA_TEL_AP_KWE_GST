<Activity mc:Ignorable="sap sap2010" x:Class="MovePdfFilesToHotFolder" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="This variable can be used in case transactions are stored in a DataTable (for example, after being retrieved from a spreadsheet)." Name="io_dt_TransactionData" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_TodaysDateFolder" Type="InArgument(x:String)" />
  </x:Members>
  <this:MovePdfFilesToHotFolder.in_Config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:MovePdfFilesToHotFolder.in_Config>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>850.4,2108.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>MovePdfFilesToHotFolder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="62">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Copy the pdf files to Abby Hot Folder for Data Extraction" DisplayName="CopyPdfFilesToHotFolder || Copy all pdf files to Abby Hot folder" sap:VirtualizedContainerService.HintSize="694.4,2044" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="PdfFiles" />
      <Variable x:TypeArguments="x:Int32" Name="Index" />
      <Variable x:TypeArguments="s:String[]" Name="PreviousPdfFiles" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message || Copy Pdf Workflow Start Log" sap:VirtualizedContainerService.HintSize="632,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start: Copy Pdf Files to Abby Hot Folder&quot;]" />
    <Assign DisplayName="Assign || Get previous pdf files" sap:VirtualizedContainerService.HintSize="632,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[PreviousPdfFiles]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(in_Config("InputHotFolderPath").ToString,in_Config("InputFilePdfExtension").ToString.Trim)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each || Delete Previous Pdf files present in folder" sap:VirtualizedContainerService.HintSize="632,318.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[PreviousPdfFiles]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="PreviousPdfFileItem" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body || Delete Previous Pdf files For Loop Body" sap:VirtualizedContainerService.HintSize="400,192.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:DeleteFileX DisplayName="Delete File || Delete Previous File" sap:VirtualizedContainerService.HintSize="337.6,80.8" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[PreviousPdfFileItem]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <Assign DisplayName="Assign || Get all pdf Files" sap:VirtualizedContainerService.HintSize="632,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[PdfFiles]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(in_TodaysDateFolder,in_Config("InputFilePdfExtension").ToString.Trim)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[Index]" DataTable="[io_dt_TransactionData]" DisplayName="For Each Row in Data Table || Match the pdf name with Invoice number and copy the pdf file to Hot Folder" sap:VirtualizedContainerService.HintSize="632,1033.6" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body || Copy Pdf file for Loop Body" sap:VirtualizedContainerService.HintSize="598.4,916.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch DisplayName="Try Catch || Copy Pdf files by matching Invoice Number and HAWB Number" sap:VirtualizedContainerService.HintSize="536,804.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <If Condition="[PdfFiles.AsEnumerable().Where(Function(PdfFileName) PdfFileName.Split(&quot;\&quot;c).Last.ToString.Contains(CurrentRow(in_Config(&quot;InvoiceColumnName&quot;).ToString).ToString)).ToArray().Length &gt; 0 AndAlso PdfFiles.AsEnumerable().Where(Function(PdfFileName) PdfFileName.Split(&quot;\&quot;c).Last.ToString.Contains(CurrentRow(in_Config(&quot;DescriptionColumn&quot;).ToString).ToString)).ToArray().Length &gt; 0]" DisplayName="If || Check if pdf file is present for current row Invoice Numbe and HAWB Numbr" sap:VirtualizedContainerService.HintSize="477.6,913.6" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence DisplayName="Sequence || Copy Pdf File Sequence" sap:VirtualizedContainerService.HintSize="400,400" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message || Pdf file present Log" sap:VirtualizedContainerService.HintSize="337.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Info: Pdf file is present for &quot;+ CurrentRow(in_Config(&quot;InvoiceColumnName&quot;).ToString).ToString+&quot; Invoice Number&quot;]" />
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;InputHotFolderPath&quot;).ToString]" DisplayName="Copy File || Pdf file" sap:VirtualizedContainerService.HintSize="337.6,155.2" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[PdfFiles.AsEnumerable().Where(Function(PdfFileName) PdfFileName.Split(&quot;\&quot;c).Last.ToString.Contains(CurrentRow(in_Config(&quot;InvoiceColumnName&quot;).ToString).ToString))(0)]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Sequence || Pdf not Found BRE Sequence" sap:VirtualizedContainerService.HintSize="400,335.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message || Pdf file not present Log" sap:VirtualizedContainerService.HintSize="337.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Exception: Pdf file not present for &quot;+CurrentRow(in_Config(&quot;InvoiceColumnName&quot;).ToString).ToString+&quot; Invoice Number&quot;]" />
                      <Throw DisplayName="Throw || Pdf File not Found" Exception="[New BusinessRuleException(in_Config(&quot;PdfFilenotfound&quot;).ToString.Trim+&quot; &quot;+CurrentRow(in_Config(&quot;InvoiceColumnName&quot;).ToString).ToString)]" sap:VirtualizedContainerService.HintSize="337.6,90.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
                    </Sequence>
                  </If.Else>
                </If>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="502.4,640" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Sequence || BRE Log messages and Status Update Sequence" sap:VirtualizedContainerService.HintSize="496,569.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message || Pdf file not present Exception Log" sap:VirtualizedContainerService.HintSize="433.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Exception: Pdf file not present for &quot;+CurrentRow(in_Config(&quot;InvoiceColumnName&quot;).ToString).ToString+&quot; Invoice Number&quot;]" />
                      <Assign DisplayName="Assign || Pdf file not present Status Value" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[io_dt_TransactionData(Index)(in_Config("StatusColumnstobeAdded").ToString.Trim)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[in_Config("StatusReportFailureComment").ToString.Trim]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign || Pdf file not present Comment value" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[io_dt_TransactionData(Index)(in_Config("RemarksColumntobeAdded").ToString.Trim)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[exception.Message]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign || Pdf file not present Bot process Date Time" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[io_dt_TransactionData(Index)(in_Config("BotProcessDateAndTime").ToString.Trim)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[Now.ToString("dd/MM/yyyy hh:mm:ss")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:LogMessage DisplayName="Log Message || Copy Pdf Workflow complete Log" sap:VirtualizedContainerService.HintSize="632,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Complete: Copy Pdf Files to Abby Hot Folder&quot;]" />
  </Sequence>
</Activity>